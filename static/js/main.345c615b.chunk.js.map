{"version":3,"sources":["components/Coin/Coin.jsx","components/CoinList/CoinList.jsx","components/AccountBalance/AccountBalance.jsx","components/ExchangeHeader/logo.svg","components/ExchangeHeader/ExchangeHeader.jsx","App.js","reportWebVitals.js","index.js"],"names":["Td","styled","td","Coin","props","name","ticker","price","showBalance","balance","action","method","onClick","event","preventDefault","handleRefresh","tickerId","Table","table","CoinList","coinData","map","key","Section","section","AccountBalance","buttonText","content","amount","handleBalanceHide","Header","header","Img","img","H1","h1","ExchangeHeader","src","logo","alt","className","Component","Div","div","formatPrice","parseFloat","Number","toFixed","App","useState","setShowBalance","setCoinData","componentDidMount","a","axios","get","response","coinIds","data","slice","coin","id","promises","Promise","all","coinPriceData","symbol","quotes","useEffect","length","valueChangeId","tickerUrl","newPrice","USD","newCoinData","values","newValues","oldValue","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.345c615b.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Td = styled.td`\n  border: 1px solid #cccccc;\n  width: 25vw;\n`;\n\nexport default function Coin(props) {\n\n  const handleClick = (event) => {\n\n    event.preventDefault();\n\n    props.handleRefresh(props.tickerId);\n  }\n    return (\n      <tr>\n        <Td>{props.name}</Td>\n        <Td>{props.ticker}</Td>\n        <Td>{props.price}</Td>\n        {props.showBalance ? <Td>{props.balance}</Td> : null}\n        <Td>\n          <form action=\"#\" method=\"POST\">\n            <button onClick={handleClick}>Refresh</button>\n          </form>\n        </Td>\n      </tr>\n    )\n  }\n\nCoin.propTypes = {\n  name: PropTypes.string.isRequired,\n  ticker: PropTypes.string.isRequired,\n  balance: PropTypes.number.isRequired,\n  price: PropTypes.number.isRequired\n}","import React from 'react'\nimport Coin from '../Coin/Coin';\nimport styled from 'styled-components';\n\nconst Table = styled.table`\n  margin: 50px auto 50px auto;\n  display: inline-block;\n  font-size: 1.4rem;\n`;\n\nexport default function CoinList(props) {\n    return (\n        <Table>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Ticker</th>\n            <th>Price</th>\n            {props.showBalance ? <th>Balance</th> : null}\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            props.coinData.map( ({key, name, ticker, balance, price}) => \n                <Coin key={key} \n                      showBalance={props.showBalance} \n                      handleRefresh={props.handleRefresh} \n                      name={name} \n                      ticker={ticker} \n                      balance={balance}\n                      price={price} \n                      tickerId={key}\n                      />\n              )\n          }\n        </tbody>\n      </Table>\n    )\n  }\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Section = styled.section`\n  font-size: 2rem;\n  text-align: left;\n  padding: 1.5rem 0 1.5rem 5rem;\n`;\n\nexport default function AccountBalance(props) {\n    const buttonText = props.showBalance ? 'Hide Balance' : 'Show Balance';\n    let content = null;\n    if (props.showBalance) {\n      content= <>Balance: $ {props.amount}</>;\n    }\n    return (\n      <Section>\n          {content}\n            <button onClick={props.handleBalanceHide}>{buttonText}</button>\n      </Section>\n    );\n  }\n\n\nAccountBalance.propTypes = {\n  amount: PropTypes.number.isRequired\n}","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react'\nimport logo from './logo.svg';\nimport styled from 'styled-components';\n\nconst Header = styled.header`\n  background-color: #282c34;\n  min-height: 20vh;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-start;\n  color: white;\n`;\n\nconst Img = styled.img`\n  height: 8rem;\n  pointer-events: none;\n`;\n\nconst H1 = styled.h1`\n  font-size: 4rem;\n`;\n\nexport default class ExchangeHeader extends Component {\n  render() {\n    return (\n        <Header>\n          <Img src={logo} alt=\"React logo\" />\n         <H1 className=\"App-title\">\n           Coin Exchange\n         </H1>\n        </Header>\n    )\n  }\n}\n","import React, {useState, useEffect} from 'react';\nimport CoinList from './components/CoinList/CoinList';\nimport AccountBalance from './components/AccountBalance/AccountBalance';\nimport ExchangeHeader from './components/ExchangeHeader/ExchangeHeader';\nimport styled from 'styled-components';\nimport axios from 'axios';\n\nconst Div = styled.div`\n  text-align: center;\n  background-color: rgb(20, 56, 97);\n  color: #cccccc;\n`;\n\nconst COIN_COUNT = 10;\nconst formatPrice = price => parseFloat(Number(price).toFixed(4));\n\nfunction App(props) {\n\n  const [balance, setBalance] = useState(10000);\n  const [showBalance, setShowBalance] = useState(true);\n  const [coinData, setCoinData] = useState([]);\n\n  const componentDidMount = async () => {\n    const response = await axios.get('https://api.coinpaprika.com/v1/coins');\n    const coinIds = response.data.slice( 0, COIN_COUNT).map(coin => coin.id);\n    const tickerUrl = 'https://api.coinpaprika.com/v1/tickers/';\n    const promises = coinIds.map(id => axios.get(tickerUrl + id));\n    const coinData = await Promise.all(promises);\n    const coinPriceData = coinData.map(function(response) {\n      const coin = response.data;\n      return {\n        key: coin.id,\n        name: coin.name,\n        ticker: coin.symbol,\n        balance: 0,\n        price: formatPrice(coin.quotes['USD'].price)\n      };\n    })\n    setCoinData(coinPriceData);\n  }\n\n  useEffect(function() {\n    if (coinData.length === 0) {\n      componentDidMount();\n    }\n  });\n\n  const handleRefresh = async (valueChangeId) => {\n    const tickerUrl = `https://api.coinpaprika.com/v1/tickers/${valueChangeId}`;\n    const response = await axios.get(tickerUrl);\n    const newPrice = formatPrice(response.data.quotes.USD.price);\n    const newCoinData = coinData.map( function( values ) {\n      let newValues = { ...values };\n      if ( valueChangeId === values.key ) {\n        newValues.price = newPrice;\n      }\n      return newValues;\n    });\n    setCoinData(newCoinData);\n  }\n\n  const handleBalanceHide = () => {\n    setShowBalance(oldValue => !oldValue);\n  }\n\n  return (\n    <Div>\n      <ExchangeHeader />\n      <AccountBalance amount={balance} \n                      showBalance={showBalance} \n                      handleBalanceHide={handleBalanceHide} />\n      <CoinList coinData={coinData} \n                handleRefresh={handleRefresh}\n                showBalance={showBalance} />\n    </Div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}